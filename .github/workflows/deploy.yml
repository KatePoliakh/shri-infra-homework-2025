name: Deploy to Production

on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        required: true
        description: 'Version to deploy (e.g. 1)'

env:
  YC_REGISTRY: ${{ secrets.YC_REGISTRY }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 🔍 Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Configure Git user
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: ☁️ Install YC CLI
        run: |
          echo "🔄 Installing Yandex Cloud CLI..."
          curl https://storage.yandexcloud.net/yandexcloud-yc/install.sh  | bash

          echo "✅ Add CLI path manually"
          export PATH="$HOME/yandex-cloud/bin:$PATH"

          echo "🔍 Checking yc is installed..."
          yc --version

      - name: 🔐 🐳 Login to Yandex Container Registry & Check if image exists in registry
        env:
          IMAGE: ${{ secrets.YC_REGISTRY }}:${{ github.event.inputs.version }}_latest
        run: |
          echo "🔍 Checking for image: $IMAGE"

          docker login cr.yandex -u oauth --password-stdin <<< "${{ secrets.YC_TOKEN }}"

          if ! docker manifest inspect "$IMAGE" >/dev/null 2>&1; then
            echo "❌ Image not found in registry"
            exit 1
          else
            echo "✅ Image exists"
          fi

      - name: 🛠️ SSH into server and deploy via SSH command
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          YC_REGISTRY: ${{ secrets.YC_REGISTRY }}
          VERSION: ${{ inputs.version }}
        run: |
          echo "🔑 Writing SSH private key..."
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          echo "🔌 Connecting to server ($SERVER_IP) and deploying app..."
          ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP <<EOF
            echo "🐋 Pulling Docker image..."
            docker pull $YC_REGISTRY:${VERSION}_latest

            echo "🛑 Stopping old container..."
            docker stop shri-infra-homework-2025 || true

            echo "🗑 Removing old container..."
            docker rm shri-infra-homework-2025 || true

            echo "🚀 Running new container..."
            docker run -d -p 3000:3000 --name shri-infra-homework-2025 $YC_REGISTRY:${VERSION}_latest
          EOF

      - name: 💬 Get Issue Number from Release Tag
        id: get_issue
        run: |
          echo "📌 Fetching release tag info..."
          TAG_MSG=$(git tag -l v${{ inputs.version }} --format='%(contents)')
          ISSUE_NUMBER=$(echo "$TAG_MSG" | grep -o '#[0-9]*' | tr -d '#' || echo "")

          if [ -z "$ISSUE_NUMBER" ]; then
            echo "⚠️ Could not find issue number in tag message."
            echo "ISSUE_NUMBER=" >> $GITHUB_ENV
          else
            echo "📌 Found linked issue #$ISSUE_NUMBER"
            echo "ISSUE_NUMBER=$ISSUE_NUMBER" >> $GITHUB_ENV
          fi

      - name: 💬 Comment on Issue via GitHub API (if issue exists)
        if: env.ISSUE_NUMBER != ''
        run: |
          COMMENT="🚀 **Deployed to production**\nDate: $(date +'%Y-%m-%d')\nBy: ${{ github.actor }}"
          
          echo "💬 Adding comment to issue #$ISSUE_NUMBER"
          curl -fsSL --request POST \
            --url "https://api.github.com/repos/${{ github.repository }}/issues/${{ env.ISSUE_NUMBER }}/comments" \
            --header "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            --header "Accept: application/vnd.github.v3+json" \
            --data '{"body":"'"$COMMENT"'"}'